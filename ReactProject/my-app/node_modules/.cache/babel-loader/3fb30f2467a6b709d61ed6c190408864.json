{"ast":null,"code":"import _defineProperty from\"C:/Users/pavlo/React-Node/ReactProject/my-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _asyncToGenerator from\"C:/Users/pavlo/React-Node/ReactProject/my-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/pavlo/React-Node/ReactProject/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectSpread from\"C:/Users/pavlo/React-Node/ReactProject/my-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\pavlo\\\\React-Node\\\\ReactProject\\\\my-app\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useEffect,useState}from\"react\";import{Link,useParams,useRouteMatch}from\"react-router-dom\";import{Button,Container,Form,FormGroup,Input,Label}from'reactstrap';import'./EmployeeUpdate.css';import{useLocation,useNavigate}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function withRouter(Component){function ComponentWithRouterProp(props){var location=useLocation();var navigate=useNavigate();var params=useParams();return/*#__PURE__*/_jsx(Component,_objectSpread(_objectSpread({},props),{},{router:{location:location,navigate:navigate,params:params}}));}return ComponentWithRouterProp;}function EmployeeUpdate(){var emptyEmployee={id:0,last_name:'',first_name:'',date_of_birth:'',is_active:''};var _useState=useState(emptyEmployee),_useState2=_slicedToArray(_useState,2),employee=_useState2[0],setEmployee=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),checked=_useState4[0],setChecked=_useState4[1];var params=useParams();var id=params.id;useEffect(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log('useEffect is Working...');_context.next=3;return fetch(\"/employee/\".concat(id),{mode:'cors',headers:{\"x-access-token\":localStorage.getItem(\"token\")}}).then(function(response){return response.json();}).then(function(result){setEmployee(result[0]);console.log(result);});case 3:setChecked(employee.is_active);case 4:case\"end\":return _context.stop();}}},_callee);})),[]);function handleChange(event){setEmployee(_objectSpread(_objectSpread({},employee),{},_defineProperty({},event.target.name,event.target.value)));}function handleSubmit(_x){return _handleSubmit.apply(this,arguments);}function _handleSubmit(){_handleSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:e.preventDefault();setEmployee(employee.is_active=checked);employee.date_of_birth=employee.date_of_birth.substring(0,10);console.log('HandleSubmit is Working for Employee:'+JSON.stringify(employee));_context2.next=6;return fetch(\"/employee/\".concat(employee.id),{mode:'cors',method:'PUT',headers:{\"x-access-token\":localStorage.getItem(\"token\"),'accept':'application/json','content-type':'application/json'},body:JSON.stringify(employee)});case 6:console.log('Update is in progress...'+JSON.stringify(employee));// .then(response => {\n//   console.log(response);\n//   return response.json()\n// })\nconsole.log('Update is DONE');case 8:case\"end\":return _context2.stop();}}},_callee2);}));return _handleSubmit.apply(this,arguments);}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"header\",{className:\"App-header\",children:\"My first React-Node CRUD App\"}),/*#__PURE__*/_jsxs(\"h1\",{style:{textAlign:\"center\",font:14},children:[\"Edit \",employee.first_name,\"  \",employee.last_name,\" Profile!\"]}),/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsxs(Form,{onSubmit:function onSubmit(e){return handleSubmit(e);},children:[/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{for:\"firstname\",children:\"Firstname\"}),/*#__PURE__*/_jsx(Input,{type:\"text\",name:\"first_name\",id:\"firstname\",value:employee.first_name,onChange:function onChange(e){handleChange(e);},autoComplete:\"firstname\"})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{for:\"lastname\",children:\"Lastname\"}),/*#__PURE__*/_jsx(Input,{type:\"text\",name:\"last_name\",id:\"lastname\",value:employee.last_name,onChange:function onChange(e){handleChange(e);},autoComplete:\"lastname\"})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{for:\"age\",children:\"Date of Birth\"}),/*#__PURE__*/_jsx(Input,{type:\"date\",name:\"date_of_birth\",id:\"age\",value:employee.date_of_birth.substring(0,10),onChange:function onChange(e){handleChange(e);},autoComplete:\"age\"})]}),/*#__PURE__*/_jsxs(FormGroup,{check:true,inline:true,children:[/*#__PURE__*/_jsx(Label,{for:\"isActive\",children:\"Active\"}),/*#__PURE__*/_jsx(Input,{type:\"checkbox\",name:\"is_active\",id:\"isActive\",defaultChecked:checked,value:employee.is_active?'Yes':'No',onChange:function onChange(){return setChecked(!checked);},autoComplete:\"isActive\"})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Button,{outline:true,color:\"primary\",type:\"submit\",tag:Link,to:\"/home\",children:\"Save\"}),/*#__PURE__*/_jsx(Button,{outline:true,color:\"secondary\",tag:Link,to:\"/home\",children:\"Cancel\"})]})]})})]});}export default EmployeeUpdate;","map":{"version":3,"sources":["C:/Users/pavlo/React-Node/reactproject/my-app/src/EmployeeUpdate.js"],"names":["React","useEffect","useState","Link","useParams","useRouteMatch","Button","Container","Form","FormGroup","Input","Label","useLocation","useNavigate","withRouter","Component","ComponentWithRouterProp","props","location","navigate","params","EmployeeUpdate","emptyEmployee","id","last_name","first_name","date_of_birth","is_active","employee","setEmployee","checked","setChecked","console","log","fetch","mode","headers","localStorage","getItem","then","response","json","result","handleChange","event","target","name","value","handleSubmit","e","preventDefault","substring","JSON","stringify","method","body","textAlign","font"],"mappings":"6pBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,IAAT,CAAeC,SAAf,CAAyBC,aAAzB,KAA8C,kBAA9C,CACA,OAASC,MAAT,CAAiBC,SAAjB,CAA4BC,IAA5B,CAAkCC,SAAlC,CAA6CC,KAA7C,CAAoDC,KAApD,KAAiE,YAAjE,CACA,MAAO,sBAAP,CACA,OACEC,WADF,CAEEC,WAFF,KAGO,kBAHP,C,wFAKA,QAASC,CAAAA,UAAT,CAAoBC,SAApB,CAA+B,CAC7B,QAASC,CAAAA,uBAAT,CAAiCC,KAAjC,CAAwC,CACtC,GAAIC,CAAAA,QAAQ,CAAGN,WAAW,EAA1B,CACA,GAAIO,CAAAA,QAAQ,CAAGN,WAAW,EAA1B,CACA,GAAIO,CAAAA,MAAM,CAAGhB,SAAS,EAAtB,CACA,mBACE,KAAC,SAAD,gCACMa,KADN,MAEE,MAAM,CAAE,CAAEC,QAAQ,CAARA,QAAF,CAAYC,QAAQ,CAARA,QAAZ,CAAsBC,MAAM,CAANA,MAAtB,CAFV,GADF,CAMD,CACD,MAAOJ,CAAAA,uBAAP,CACD,CAGD,QAASK,CAAAA,cAAT,EAA0B,CAExB,GAAIC,CAAAA,aAAa,CAAG,CAClBC,EAAE,CAAC,CADe,CAElBC,SAAS,CAAC,EAFQ,CAGlBC,UAAU,CAAC,EAHO,CAIlBC,aAAa,CAAC,EAJI,CAKlBC,SAAS,CAAC,EALQ,CAApB,CASA,cAA+BzB,QAAQ,CAACoB,aAAD,CAAvC,wCAAOM,QAAP,eAAgBC,WAAhB,eACA,eAA8B3B,QAAQ,CAAC,KAAD,CAAtC,yCAAO4B,OAAP,eAAgBC,UAAhB,eACA,GAAOX,CAAAA,MAAM,CAAGhB,SAAS,EAAzB,CAEA,GAAMmB,CAAAA,EAAE,CAAGH,MAAM,CAACG,EAAlB,CAEAtB,SAAS,sEAAC,mIACR+B,OAAO,CAACC,GAAR,CAAY,yBAAZ,EADQ,sBAEFC,CAAAA,KAAK,qBAAcX,EAAd,EAAoB,CAC7BY,IAAI,CAAC,MADwB,CAE7BC,OAAO,CAAC,CAAE,iBAAkBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAApB,CAFqB,CAApB,CAAL,CAILC,IAJK,CAIA,SAAAC,QAAQ,CAAI,CAChB,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CACD,CANK,EAOLF,IAPK,CAOA,SAACG,MAAD,CAAY,CAChBb,WAAW,CAACa,MAAM,CAAC,CAAD,CAAP,CAAX,CACAV,OAAO,CAACC,GAAR,CAAYS,MAAZ,EAED,CAXK,CAFE,QAeRX,UAAU,CAACH,QAAQ,CAACD,SAAV,CAAV,CAfQ,sDAAD,GAgBP,EAhBO,CAAT,CAkBA,QAASgB,CAAAA,YAAT,CAAsBC,KAAtB,CAA8B,CAC5Bf,WAAW,gCAAKD,QAAL,wBAAegB,KAAK,CAACC,MAAN,CAAaC,IAA5B,CAAkCF,KAAK,CAACC,MAAN,CAAaE,KAA/C,GAAX,CACD,CArCuB,QAuCTC,CAAAA,YAvCS,gJAuCxB,kBAA4BC,CAA5B,sHAEEA,CAAC,CAACC,cAAF,GAEArB,WAAW,CAACD,QAAQ,CAACD,SAAT,CAAqBG,OAAtB,CAAX,CACAF,QAAQ,CAACF,aAAT,CAAyBE,QAAQ,CAACF,aAAT,CAAuByB,SAAvB,CAAiC,CAAjC,CAAmC,EAAnC,CAAzB,CACAnB,OAAO,CAACC,GAAR,CAAY,wCAAyCmB,IAAI,CAACC,SAAL,CAAezB,QAAf,CAArD,EANF,uBAQQM,CAAAA,KAAK,qBAAcN,QAAQ,CAACL,EAAvB,EACX,CACEY,IAAI,CAAC,MADP,CAEEmB,MAAM,CAAE,KAFV,CAGElB,OAAO,CAAE,CACP,iBAAkBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADX,CAEP,SAAU,kBAFH,CAGP,eAAgB,kBAHT,CAHX,CAQEiB,IAAI,CAACH,IAAI,CAACC,SAAL,CAAezB,QAAf,CARP,CADW,CARb,QAmBEI,OAAO,CAACC,GAAR,CAAY,2BAA6BmB,IAAI,CAACC,SAAL,CAAezB,QAAf,CAAzC,EACA;AACA;AACA;AACA;AACAI,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAxBF,wDAvCwB,+CAmExB,mBACE,oCACE,eAAQ,SAAS,CAAC,YAAlB,0CADF,cAIE,YAAI,KAAK,CAAE,CAAEuB,SAAS,CAAE,QAAb,CAAwBC,IAAI,CAAC,EAA7B,CAAX,mBAAmD7B,QAAQ,CAACH,UAA5D,MAA0EG,QAAQ,CAACJ,SAAnF,eAJF,cAKE,KAAC,SAAD,wBACE,MAAC,IAAD,EAAM,QAAQ,CAAE,kBAACyB,CAAD,QAAMD,CAAAA,YAAY,CAACC,CAAD,CAAlB,EAAhB,wBACE,MAAC,SAAD,yBACE,KAAC,KAAD,EAAO,GAAG,CAAC,WAAX,uBADF,cAEE,KAAC,KAAD,EAAO,IAAI,CAAC,MAAZ,CAAmB,IAAI,CAAC,YAAxB,CAAqC,EAAE,CAAC,WAAxC,CAAoD,KAAK,CAAErB,QAAQ,CAACH,UAApE,CACE,QAAQ,CAAE,kBAACwB,CAAD,CAAO,CAACN,YAAY,CAACM,CAAD,CAAZ,CAAgB,CADpC,CACsC,YAAY,CAAC,WADnD,EAFF,GADF,cAME,MAAC,SAAD,yBACE,KAAC,KAAD,EAAO,GAAG,CAAC,UAAX,sBADF,cAEE,KAAC,KAAD,EAAO,IAAI,CAAC,MAAZ,CAAmB,IAAI,CAAC,WAAxB,CAAoC,EAAE,CAAC,UAAvC,CAAkD,KAAK,CAAErB,QAAQ,CAACJ,SAAlE,CACE,QAAQ,CAAE,kBAACyB,CAAD,CAAO,CAACN,YAAY,CAACM,CAAD,CAAZ,CAAgB,CADpC,CACsC,YAAY,CAAC,UADnD,EAFF,GANF,cAWI,MAAC,SAAD,yBACE,KAAC,KAAD,EAAO,GAAG,CAAC,KAAX,2BADF,cAEE,KAAC,KAAD,EAAO,IAAI,CAAC,MAAZ,CAAmB,IAAI,CAAC,eAAxB,CAAwC,EAAE,CAAC,KAA3C,CAAiD,KAAK,CAAErB,QAAQ,CAACF,aAAT,CAAuByB,SAAvB,CAAiC,CAAjC,CAAmC,EAAnC,CAAxD,CACE,QAAQ,CAAE,kBAACF,CAAD,CAAO,CAACN,YAAY,CAACM,CAAD,CAAZ,CAAgB,CADpC,CACsC,YAAY,CAAC,KADnD,EAFF,GAXJ,cAgBI,MAAC,SAAD,EAAW,KAAK,KAAhB,CAAiB,MAAM,KAAvB,wBACE,KAAC,KAAD,EAAO,GAAG,CAAC,UAAX,oBADF,cAEE,KAAC,KAAD,EAAO,IAAI,CAAC,UAAZ,CAAuB,IAAI,CAAC,WAA5B,CAAwC,EAAE,CAAC,UAA3C,CAAsD,cAAc,CAAEnB,OAAtE,CAA+E,KAAK,CAAEF,QAAQ,CAACD,SAAT,CAAqB,KAArB,CAA6B,IAAnH,CACE,QAAQ,CAAE,0BAAMI,CAAAA,UAAU,CAAC,CAACD,OAAF,CAAhB,EADZ,CACwC,YAAY,CAAC,UADrD,EAFF,GAhBJ,cAqBI,MAAC,SAAD,yBACE,KAAC,MAAD,EAAQ,OAAO,KAAf,CAAgB,KAAK,CAAC,SAAtB,CAAgC,IAAI,CAAC,QAArC,CAA+C,GAAG,CAAE3B,IAApD,CAA0D,EAAE,CAAC,OAA7D,kBADF,cAEE,KAAC,MAAD,EAAQ,OAAO,KAAf,CAAgB,KAAK,CAAC,WAAtB,CAAkC,GAAG,CAAEA,IAAvC,CAA6C,EAAE,CAAC,OAAhD,oBAFF,GArBJ,GADF,EALF,GADF,CAsCD,CACD,cAAekB,CAAAA,cAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams,useRouteMatch } from \"react-router-dom\";\r\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport './EmployeeUpdate.css';\r\nimport {\r\n  useLocation,\r\n  useNavigate\r\n} from \"react-router-dom\";  \r\n\r\nfunction withRouter(Component) {\r\n  function ComponentWithRouterProp(props) {\r\n    let location = useLocation();\r\n    let navigate = useNavigate();\r\n    let params = useParams();\r\n    return (\r\n      <Component\r\n        {...props}\r\n        router={{ location, navigate, params }}\r\n      />\r\n    );\r\n  }\r\n  return ComponentWithRouterProp;\r\n}\r\n\r\n\r\nfunction EmployeeUpdate() {\r\n\r\n  var emptyEmployee = {\r\n    id:0,\r\n    last_name:'',\r\n    first_name:'',\r\n    date_of_birth:'',\r\n    is_active:''\r\n  };\r\n\r\n\r\n  const [employee,setEmployee] = useState(emptyEmployee);\r\n  const [checked, setChecked] = useState(false);\r\n  const  params = useParams();\r\n\r\n  const id = params.id;\r\n\r\n  useEffect(async () => {\r\n    console.log('useEffect is Working...')\r\n    await fetch(`/employee/${id}`, {\r\n      mode:'cors',\r\n      headers:{ \"x-access-token\": localStorage.getItem(\"token\"),}\r\n    })\r\n    .then(response => {\r\n      return response.json()\r\n    })\r\n    .then((result) => {\r\n      setEmployee(result[0]);\r\n      console.log(result);\r\n      \r\n    })\r\n    \r\n    setChecked(employee.is_active);\r\n  },[] );\r\n\r\n  function handleChange(event)  {\r\n    setEmployee({...employee,[event.target.name]:event.target.value})\r\n  }\r\n\r\n  async function handleSubmit(e){\r\n\r\n    e.preventDefault();\r\n    \r\n    setEmployee(employee.is_active = checked);\r\n    employee.date_of_birth = employee.date_of_birth.substring(0,10);\r\n    console.log('HandleSubmit is Working for Employee:'+ JSON.stringify(employee));\r\n    \r\n    await fetch(`/employee/${employee.id}`,\r\n    {\r\n      mode:'cors',\r\n      method: 'PUT',\r\n      headers: { \r\n        \"x-access-token\": localStorage.getItem(\"token\"),\r\n        'accept': 'application/json',\r\n        'content-type': 'application/json'\r\n      },\r\n      body:JSON.stringify(employee)\r\n    })\r\n    console.log('Update is in progress...' + JSON.stringify(employee))\r\n    // .then(response => {\r\n    //   console.log(response);\r\n    //   return response.json()\r\n    // })\r\n    console.log('Update is DONE')\r\n  }\r\n  \r\n\r\n  return(\r\n    <div>\r\n      <header className=\"App-header\">\r\n        My first React-Node CRUD App\r\n      </header>\r\n      <h1 style={{ textAlign: \"center\" , font:14}}>Edit {employee.first_name}  {employee.last_name} Profile!</h1>\r\n      <Container> \r\n        <Form onSubmit={(e)=> handleSubmit(e)}>\r\n          <FormGroup>\r\n            <Label for=\"firstname\">Firstname</Label>\r\n            <Input type=\"text\" name=\"first_name\" id=\"firstname\" value={employee.first_name}\r\n              onChange={(e) => {handleChange(e)}} autoComplete=\"firstname\"/>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"lastname\">Lastname</Label>\r\n            <Input type=\"text\" name=\"last_name\" id=\"lastname\" value={employee.last_name}\r\n              onChange={(e) => {handleChange(e)}} autoComplete=\"lastname\"/>\r\n            </FormGroup>          \r\n            <FormGroup>\r\n              <Label for=\"age\">Date of Birth</Label>\r\n              <Input type=\"date\" name=\"date_of_birth\" id=\"age\" value={employee.date_of_birth.substring(0,10)}\r\n                onChange={(e) => {handleChange(e)}} autoComplete=\"age\"/>\r\n            </FormGroup>\r\n            <FormGroup check inline>\r\n              <Label for=\"isActive\">Active</Label>\r\n              <Input type=\"checkbox\" name=\"is_active\" id=\"isActive\" defaultChecked={checked} value={employee.is_active ? 'Yes' : 'No'}\r\n                onChange={() => setChecked(!checked)} autoComplete=\"isActive\"/>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Button outline color=\"primary\" type=\"submit\"  tag={Link} to=\"/home\">Save</Button>{/*tag={Link} to=\"/\" */}\r\n              <Button outline color=\"secondary\" tag={Link} to=\"/home\">Cancel</Button>\r\n            </FormGroup>\r\n          </Form>\r\n        </Container>\r\n       \r\n      </div>\r\n    )\r\n\r\n}\r\nexport default EmployeeUpdate;"]},"metadata":{},"sourceType":"module"}