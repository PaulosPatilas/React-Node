{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/pavlo/React-Node/ReactProject/my-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _defineProperty from\"C:/Users/pavlo/React-Node/ReactProject/my-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"C:/Users/pavlo/React-Node/ReactProject/my-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"C:/Users/pavlo/React-Node/ReactProject/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\pavlo\\\\React-Node\\\\ReactProject\\\\my-app\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{useEffect,useState}from'react';import{Button,Container,Form,FormGroup,Input,Label}from'reactstrap';import{Link}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function EmployeeAddition(){var emptyEmployee={id:0,last_name:'',first_name:'',date_of_birth:'',is_active:''};var _useState=useState(emptyEmployee),_useState2=_slicedToArray(_useState,2),newEmployee=_useState2[0],setEmployee=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),checked=_useState4[0],setChecked=_useState4[1];// useEffect(() => {\n//     console.log (`You clicked ${count} times`);\n// });\nfunction handleChange(event){console.log(event.target.name);console.log(event.target.value);setEmployee(_objectSpread(_objectSpread({},newEmployee),{},_defineProperty({},event.target.name,event.target.value)));}function handleSubmit(_x){return _handleSubmit.apply(this,arguments);}function _handleSubmit(){_handleSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0://e.preventDefault();\nconsole.log(newEmployee.is_active);if(!(newEmployee.first_name==\"\"||newEmployee.last_name==\"\"||newEmployee.date_of_birth==\"\")){_context.next=6;break;}alert('Please complete the fields first');return _context.abrupt(\"return\");case 6:setEmployee(newEmployee.is_active=checked);_context.next=9;return fetch(\"/employee\",{mode:'cors',method:'POST',headers:{\"x-access-token\":localStorage.getItem(\"token\"),'accept':'application/json','content-type':'application/json'},body:JSON.stringify(newEmployee)});case 9:console.log('ADD is in progress...');// .then(response => {\n//   console.log(response);\n//   return response.json()\n// })\nconsole.log('ADD IS DONE');case 11:case\"end\":return _context.stop();}}},_callee);}));return _handleSubmit.apply(this,arguments);}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"header\",{className:\"App-header\",children:\"My first React-Node CRUD App\"}),/*#__PURE__*/_jsx(\"h1\",{style:{textAlign:\"center\",font:14},children:\"Add new Employee\"}),/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsxs(Form,{onSubmit:function onSubmit(e){return handleSubmit(e);},children:[/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{for:\"firstname\",children:\"Firstname\"}),/*#__PURE__*/_jsx(Input,{type:\"text\",name:\"first_name\",id:\"firstname\",value:newEmployee.first_name||'',onChange:function onChange(e){handleChange(e);},autoComplete:\"firstname\"})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{for:\"lastname\",children:\"Lastname\"}),/*#__PURE__*/_jsx(Input,{type:\"text\",name:\"last_name\",id:\"lastname\",value:newEmployee.last_name||'',onChange:function onChange(e){handleChange(e);},autoComplete:\"lastname\"})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Label,{for:\"age\",children:\"Date of Birth\"}),/*#__PURE__*/_jsx(Input,{type:\"date\",name:\"date_of_birth\",id:\"age\",value:newEmployee.date_of_birth||'',onChange:function onChange(e){handleChange(e);},autoComplete:\"age\"})]}),/*#__PURE__*/_jsxs(FormGroup,{check:true,inline:true,children:[/*#__PURE__*/_jsx(Label,{for:\"isActive\",children:\"Active\"}),/*#__PURE__*/_jsx(Input,{type:\"checkbox\",name:\"is_active\",id:\"isActive\",value:true||'',onChange:function onChange(){return setChecked(!checked);},autoComplete:\"isActive\"})]}),/*#__PURE__*/_jsxs(FormGroup,{children:[/*#__PURE__*/_jsx(Button,{outline:true,color:\"primary\",type:\"submit\",children:\"Add\"}),/*#__PURE__*/_jsx(Button,{outline:true,color:\"secondary\",tag:Link,to:\"/home\",children:\"Cancel\"})]})]})})]});}export default EmployeeAddition;","map":{"version":3,"sources":["C:/Users/pavlo/React-Node/reactproject/my-app/src/EmployeeAddition.js"],"names":["React","useEffect","useState","Button","Container","Form","FormGroup","Input","Label","Link","EmployeeAddition","emptyEmployee","id","last_name","first_name","date_of_birth","is_active","newEmployee","setEmployee","checked","setChecked","handleChange","event","console","log","target","name","value","handleSubmit","e","alert","fetch","mode","method","headers","localStorage","getItem","body","JSON","stringify","textAlign","font"],"mappings":"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","sourcesContent":["import React,{useEffect, useState} from 'react';\r\nimport { Button, Container, Form, FormGroup, Input, Label} from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction EmployeeAddition() {\r\n    \r\n\r\n    var emptyEmployee = {\r\n        id:0,\r\n        last_name:'',\r\n        first_name:'',\r\n        date_of_birth:'',\r\n        is_active:''\r\n      };\r\n\r\n    const [newEmployee,setEmployee] = useState(emptyEmployee);\r\n    const [checked, setChecked] = useState(false);\r\n    // useEffect(() => {\r\n    //     console.log (`You clicked ${count} times`);\r\n    // });\r\n\r\n\r\n    function handleChange(event)  {\r\n        console.log(event.target.name)\r\n        console.log(event.target.value)\r\n        setEmployee({...newEmployee, [event.target.name]:event.target.value})\r\n      }\r\n\r\n    async function handleSubmit(e){\r\n\r\n        //e.preventDefault();\r\n        console.log(newEmployee.is_active);\r\n        if (newEmployee.first_name == \"\" || newEmployee.last_name == \"\" || newEmployee.date_of_birth == \"\"){\r\n            alert('Please complete the fields first')\r\n            return;\r\n        }\r\n        else {\r\n        setEmployee(newEmployee.is_active=checked);\r\n        await fetch(`/employee`,\r\n        {\r\n          mode:'cors',\r\n          method: 'POST',\r\n          headers: { \r\n            \"x-access-token\": localStorage.getItem(\"token\"),\r\n            'accept': 'application/json',\r\n            'content-type': 'application/json'\r\n          },\r\n          body:JSON.stringify(newEmployee)\r\n        })\r\n        console.log('ADD is in progress...')\r\n        // .then(response => {\r\n        //   console.log(response);\r\n        //   return response.json()\r\n        // })\r\n        console.log('ADD IS DONE')\r\n        }\r\n      }\r\n\r\n\r\n    return (\r\n        <div>\r\n        <header className=\"App-header\">\r\n          My first React-Node CRUD App\r\n        </header>\r\n        <h1 style={{ textAlign: \"center\" , font:14}}>Add new Employee</h1>\r\n        <Container> \r\n          <Form onSubmit={(e)=> handleSubmit(e)}>\r\n            <FormGroup>\r\n              <Label for=\"firstname\">Firstname</Label>\r\n              <Input type=\"text\" name=\"first_name\" id=\"firstname\" value={newEmployee.first_name || ''}\r\n                onChange={(e) => {handleChange(e)}} autoComplete=\"firstname\"/>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"lastname\">Lastname</Label>\r\n              <Input type=\"text\" name=\"last_name\" id=\"lastname\" value={newEmployee.last_name || ''}\r\n                onChange={(e) => {handleChange(e)}} autoComplete=\"lastname\"/>\r\n              </FormGroup>          \r\n              <FormGroup>\r\n                <Label for=\"age\">Date of Birth</Label>\r\n                <Input type=\"date\" name=\"date_of_birth\" id=\"age\" value={newEmployee.date_of_birth || ''}\r\n                  onChange={(e) => {handleChange(e)}} autoComplete=\"age\"/>\r\n              </FormGroup>\r\n              <FormGroup check inline>\r\n                <Label for=\"isActive\">Active</Label>\r\n                <Input type=\"checkbox\" name=\"is_active\" id=\"isActive\" value={true || ''}\r\n                  onChange={() => setChecked(!checked)} autoComplete=\"isActive\"/>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Button outline color=\"primary\" type=\"submit\">Add</Button>\r\n                <Button outline color=\"secondary\" tag={Link} to=\"/home\">Cancel</Button>\r\n              </FormGroup>\r\n            </Form>\r\n          </Container>\r\n         \r\n        </div>\r\n    )        \r\n}    \r\n\r\nexport default EmployeeAddition; "]},"metadata":{},"sourceType":"module"}