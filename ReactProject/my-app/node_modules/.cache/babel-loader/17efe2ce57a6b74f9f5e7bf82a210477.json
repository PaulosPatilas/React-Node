{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pavlo\\\\React-Node\\\\reactproject\\\\my-app\\\\src\\\\EmployeeUpdate.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams, useRouteMatch } from \"react-router-dom\";\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\nimport './EmployeeUpdate.css';\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction withRouter(Component) {\n  var _s = $RefreshSig$();\n\n  function ComponentWithRouterProp(props) {\n    _s();\n\n    let location = useLocation();\n    let navigate = useNavigate();\n    let params = useParams();\n    return /*#__PURE__*/_jsxDEV(Component, { ...props,\n      router: {\n        location,\n        navigate,\n        params\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n\n  _s(ComponentWithRouterProp, \"G4H0N746j5KwtpeOKQjfXhEbWfg=\", false, function () {\n    return [useLocation, useNavigate, useParams];\n  });\n\n  return ComponentWithRouterProp;\n}\n\nfunction EmployeeUpdate() {\n  _s2();\n\n  var emptyEmployee = {\n    id: 0,\n    last_name: '',\n    first_name: '',\n    date_of_birth: '',\n    is_active: ''\n  };\n  const [employee, setEmployee] = useState(emptyEmployee);\n  const [checked, setChecked] = useState(false);\n  const params = useParams();\n  const id = params.id;\n  useEffect(async () => {\n    console.log('useEffect is Working...');\n    await fetch(`http://localhost:8080/employee/${id}`, {\n      mode: 'cors',\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"token\")\n      }\n    }).then(response => {\n      return response.json();\n    }).then(result => {\n      setEmployee(result[0]);\n      console.log(result);\n    });\n    setChecked(employee.is_active);\n  }, []);\n\n  function handleChange(event) {\n    setEmployee({ ...employee,\n      [event.target.name]: event.target.value\n    });\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    setEmployee(employee.is_active = checked);\n    employee.date_of_birth = employee.date_of_birth.substring(0, 10);\n    console.log('HandleSubmit is Working for Employee:' + JSON.stringify(employee));\n    await fetch(`http://localhost:8080/employee/${employee.id}`, {\n      mode: 'cors',\n      method: 'PUT',\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"token\"),\n        'accept': 'application/json',\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(employee)\n    });\n    console.log('Update is in progress...' + JSON.stringify(employee)); // .then(response => {\n    //   console.log(response);\n    //   return response.json()\n    // })\n\n    console.log('Update is DONE');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: \"My first React-Node CRUD App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\",\n        font: 14\n      },\n      children: [\"Edit \", employee.first_name, \"  \", employee.last_name, \" Profile!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: e => handleSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"firstname\",\n            children: \"Firstname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"first_name\",\n            id: \"firstname\",\n            value: employee.first_name,\n            onChange: e => {\n              handleChange(e);\n            },\n            autoComplete: \"firstname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"lastname\",\n            children: \"Lastname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"last_name\",\n            id: \"lastname\",\n            value: employee.last_name,\n            onChange: e => {\n              handleChange(e);\n            },\n            autoComplete: \"lastname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"age\",\n            children: \"Date of Birth\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"date\",\n            name: \"date_of_birth\",\n            id: \"age\",\n            value: employee.date_of_birth.substring(0, 10),\n            onChange: e => {\n              handleChange(e);\n            },\n            autoComplete: \"age\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          check: true,\n          inline: true,\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"isActive\",\n            children: \"Active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"checkbox\",\n            name: \"is_active\",\n            id: \"isActive\",\n            defaultChecked: checked,\n            value: employee.is_active ? 'Yes' : 'No',\n            onChange: () => setChecked(!checked),\n            autoComplete: \"isActive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            outline: true,\n            color: \"primary\",\n            type: \"submit\",\n            tag: Link,\n            to: \"/home\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            outline: true,\n            color: \"secondary\",\n            tag: Link,\n            to: \"/home\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(EmployeeUpdate, \"xNNpGQj/Ab8a3IBlde0Av/HPUHw=\", false, function () {\n  return [useParams];\n});\n\n_c = EmployeeUpdate;\nexport default EmployeeUpdate;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeUpdate\");","map":{"version":3,"sources":["C:/Users/pavlo/React-Node/reactproject/my-app/src/EmployeeUpdate.js"],"names":["React","useEffect","useState","Link","useParams","useRouteMatch","Button","Container","Form","FormGroup","Input","Label","useLocation","useNavigate","withRouter","Component","ComponentWithRouterProp","props","location","navigate","params","EmployeeUpdate","emptyEmployee","id","last_name","first_name","date_of_birth","is_active","employee","setEmployee","checked","setChecked","console","log","fetch","mode","headers","localStorage","getItem","then","response","json","result","handleChange","event","target","name","value","handleSubmit","e","preventDefault","substring","JSON","stringify","method","body","textAlign","font"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams,useRouteMatch } from \"react-router-dom\";\r\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport './EmployeeUpdate.css';\r\nimport {\r\n  useLocation,\r\n  useNavigate\r\n} from \"react-router-dom\";  \r\n\r\nfunction withRouter(Component) {\r\n  function ComponentWithRouterProp(props) {\r\n    let location = useLocation();\r\n    let navigate = useNavigate();\r\n    let params = useParams();\r\n    return (\r\n      <Component\r\n        {...props}\r\n        router={{ location, navigate, params }}\r\n      />\r\n    );\r\n  }\r\n  return ComponentWithRouterProp;\r\n}\r\n\r\n\r\nfunction EmployeeUpdate() {\r\n\r\n  var emptyEmployee = {\r\n    id:0,\r\n    last_name:'',\r\n    first_name:'',\r\n    date_of_birth:'',\r\n    is_active:''\r\n  };\r\n\r\n\r\n  const [employee,setEmployee] = useState(emptyEmployee);\r\n  const [checked, setChecked] = useState(false);\r\n  const  params = useParams();\r\n\r\n  const id = params.id;\r\n\r\n  useEffect(async () => {\r\n    console.log('useEffect is Working...')\r\n    await fetch(`http://localhost:8080/employee/${id}`, {\r\n      mode:'cors',\r\n      headers:{ \"x-access-token\": localStorage.getItem(\"token\"),}\r\n    })\r\n    .then(response => {\r\n      return response.json()\r\n    })\r\n    .then((result) => {\r\n      setEmployee(result[0]);\r\n      console.log(result);\r\n      \r\n    })\r\n    \r\n    setChecked(employee.is_active);\r\n  },[] );\r\n\r\n  function handleChange(event)  {\r\n    setEmployee({...employee,[event.target.name]:event.target.value})\r\n  }\r\n\r\n  async function handleSubmit(e){\r\n\r\n    e.preventDefault();\r\n    \r\n    setEmployee(employee.is_active = checked);\r\n    employee.date_of_birth = employee.date_of_birth.substring(0,10);\r\n    console.log('HandleSubmit is Working for Employee:'+ JSON.stringify(employee));\r\n    \r\n    await fetch(`http://localhost:8080/employee/${employee.id}`,\r\n    {\r\n      mode:'cors',\r\n      method: 'PUT',\r\n      headers: { \r\n        \"x-access-token\": localStorage.getItem(\"token\"),\r\n        'accept': 'application/json',\r\n        'content-type': 'application/json'\r\n      },\r\n      body:JSON.stringify(employee)\r\n    })\r\n    console.log('Update is in progress...' + JSON.stringify(employee))\r\n    // .then(response => {\r\n    //   console.log(response);\r\n    //   return response.json()\r\n    // })\r\n    console.log('Update is DONE')\r\n  }\r\n  \r\n\r\n  return(\r\n    <div>\r\n      <header className=\"App-header\">\r\n        My first React-Node CRUD App\r\n      </header>\r\n      <h1 style={{ textAlign: \"center\" , font:14}}>Edit {employee.first_name}  {employee.last_name} Profile!</h1>\r\n      <Container> \r\n        <Form onSubmit={(e)=> handleSubmit(e)}>\r\n          <FormGroup>\r\n            <Label for=\"firstname\">Firstname</Label>\r\n            <Input type=\"text\" name=\"first_name\" id=\"firstname\" value={employee.first_name}\r\n              onChange={(e) => {handleChange(e)}} autoComplete=\"firstname\"/>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <Label for=\"lastname\">Lastname</Label>\r\n            <Input type=\"text\" name=\"last_name\" id=\"lastname\" value={employee.last_name}\r\n              onChange={(e) => {handleChange(e)}} autoComplete=\"lastname\"/>\r\n            </FormGroup>          \r\n            <FormGroup>\r\n              <Label for=\"age\">Date of Birth</Label>\r\n              <Input type=\"date\" name=\"date_of_birth\" id=\"age\" value={employee.date_of_birth.substring(0,10)}\r\n                onChange={(e) => {handleChange(e)}} autoComplete=\"age\"/>\r\n            </FormGroup>\r\n            <FormGroup check inline>\r\n              <Label for=\"isActive\">Active</Label>\r\n              <Input type=\"checkbox\" name=\"is_active\" id=\"isActive\" defaultChecked={checked} value={employee.is_active ? 'Yes' : 'No'}\r\n                onChange={() => setChecked(!checked)} autoComplete=\"isActive\"/>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Button outline color=\"primary\" type=\"submit\"  tag={Link} to=\"/home\">Save</Button>{/*tag={Link} to=\"/\" */}\r\n              <Button outline color=\"secondary\" tag={Link} to=\"/home\">Cancel</Button>\r\n            </FormGroup>\r\n          </Form>\r\n        </Container>\r\n       \r\n      </div>\r\n    )\r\n\r\n}\r\nexport default EmployeeUpdate;"]},"metadata":{},"sourceType":"module"}