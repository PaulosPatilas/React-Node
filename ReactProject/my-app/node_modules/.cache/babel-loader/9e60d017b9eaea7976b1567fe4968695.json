{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pavlo\\\\React-Node\\\\reactproject\\\\my-app\\\\src\\\\Registration.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Registration() {\n  _s();\n\n  const [user, setUser] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  var newUser = {\n    username: \"\",\n    password: \"\"\n  };\n\n  async function handleSubmit() {\n    await fetch('http://localhost:8080/userRegistry', {\n      mode: 'cors',\n      method: 'POST',\n      headers: {\n        'accept': 'application/json',\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(user)\n    });\n    console.log('ADD is in progress...'); // .then(response => {\n    //   console.log(response);\n    //   return response.json()\n    // })\n\n    console.log('ADD IS DONE');\n  }\n\n  function handleChange(event) {\n    console.log(event.target.name);\n    console.log(event.target.value);\n    setUser({ ...user,\n      [event.target.name]: event.target.value\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: \"My first React-Node CRUD App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\",\n        font: 14\n      },\n      children: \"Add new user\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: e => handleSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"username\",\n            id: \"username\",\n            value: user.username || '',\n            onChange: e => {\n              handleChange(e);\n            },\n            autoComplete: \"username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            name: \"password\",\n            id: \"password\",\n            value: user.password || '',\n            onChange: e => {\n              handleChange(e);\n            },\n            autoComplete: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            outline: true,\n            color: \"primary\",\n            type: \"submit\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            outline: true,\n            color: \"secondary\",\n            href: \"/\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Registration, \"m0LO74gtG0qjpxjLV7NRHjYHVaM=\");\n\n_c = Registration;\nexport default Registration;\n\nvar _c;\n\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"sources":["C:/Users/pavlo/React-Node/reactproject/my-app/src/Registration.js"],"names":["React","useState","Button","Container","Form","FormGroup","Input","Label","Registration","user","setUser","username","password","newUser","handleSubmit","fetch","mode","method","headers","body","JSON","stringify","console","log","handleChange","event","target","name","value","textAlign","font","e"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Container, Form, FormGroup, Input, Label} from 'reactstrap';\r\n\r\nfunction Registration(){\r\n\r\n    const [user,setUser] = useState({\r\n      username:\"\",\r\n      password:\"\"\r\n  }\r\n)\r\n    var newUser={\r\n        username:\"\",\r\n        password:\"\"\r\n    }\r\n\r\n    async function handleSubmit(){\r\n\r\n      await fetch('http://localhost:8080/userRegistry',\r\n      {\r\n        mode:'cors',\r\n        method: 'POST',\r\n        headers: { \r\n          'accept': 'application/json',\r\n          'content-type': 'application/json'\r\n        },\r\n        body:JSON.stringify(user)\r\n      })\r\n      console.log('ADD is in progress...')\r\n      // .then(response => {\r\n      //   console.log(response);\r\n      //   return response.json()\r\n      // })\r\n      console.log('ADD IS DONE')\r\n    }\r\n\r\n    function handleChange(event)  {\r\n      console.log(event.target.name)\r\n      console.log(event.target.value)\r\n      setUser({...user, [event.target.name]:event.target.value})\r\n    }\r\n\r\n    return(\r\n        <div>\r\n        <header className=\"App-header\">\r\n          My first React-Node CRUD App\r\n        </header>\r\n        <h1 style={{ textAlign: \"center\" , font:14}}>Add new user</h1>\r\n        <Container> \r\n          <Form onSubmit={(e)=> handleSubmit(e)}>\r\n            <FormGroup>\r\n              <Label for=\"username\">Username</Label>\r\n              <Input type=\"text\" name=\"username\" id=\"username\" value={user.username || ''}\r\n                onChange={(e) => {handleChange(e)}} autoComplete=\"username\"/>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"password\">Password</Label>\r\n              <Input type=\"password\" name=\"password\" id=\"password\" value={user.password || ''}\r\n                onChange={(e) => {handleChange(e)}} autoComplete=\"password\"/>\r\n              </FormGroup>          \r\n              <FormGroup>\r\n                <Button outline color=\"primary\" type=\"submit\">Sign Up</Button>\r\n                <Button outline color=\"secondary\" href=\"/\">Cancel</Button>\r\n              </FormGroup>\r\n            </Form>\r\n          </Container>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Registration"]},"metadata":{},"sourceType":"module"}