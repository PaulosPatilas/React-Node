{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pavlo\\\\React-Node\\\\reactproject\\\\my-app\\\\src\\\\EmployeeAddition.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EmployeeAddition() {\n  _s();\n\n  var emptyEmployee = {\n    id: 0,\n    last_name: '',\n    first_name: '',\n    date_of_birth: '',\n    is_active: ''\n  };\n  const [newEmployee, setEmployee] = useState(emptyEmployee);\n  const [checked, setChecked] = useState(false); // useEffect(() => {\n  //     console.log (`You clicked ${count} times`);\n  // });\n\n  function handleChange(event) {\n    console.log(event.target.name);\n    console.log(event.target.value);\n    setEmployee({ ...newEmployee,\n      [event.target.name]: event.target.value\n    });\n  }\n\n  async function handleSubmit(e) {\n    //e.preventDefault();\n    console.log(newEmployee.is_active);\n\n    if (newEmployee.first_name == \"\" || newEmployee.last_name == \"\" || newEmployee.date_of_birth == \"\") {\n      alert('Please complete the fields first');\n      return;\n    } else {\n      setEmployee(newEmployee.is_active = checked);\n      await fetch(`/employee`, {\n        mode: 'cors',\n        method: 'POST',\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"token\"),\n          'accept': 'application/json',\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(newEmployee)\n      });\n      console.log('ADD is in progress...'); // .then(response => {\n      //   console.log(response);\n      //   return response.json()\n      // })\n\n      console.log('ADD IS DONE');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: \"My first React-Node CRUD App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: \"center\",\n        font: 14\n      },\n      children: \"Add new Employee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: e => handleSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"firstname\",\n            children: \"Firstname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"first_name\",\n            id: \"firstname\",\n            value: newEmployee.first_name || '',\n            onChange: e => {\n              handleChange(e);\n            },\n            autoComplete: \"firstname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"lastname\",\n            children: \"Lastname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"last_name\",\n            id: \"lastname\",\n            value: newEmployee.last_name || '',\n            onChange: e => {\n              handleChange(e);\n            },\n            autoComplete: \"lastname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"age\",\n            children: \"Date of Birth\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"date\",\n            name: \"date_of_birth\",\n            id: \"age\",\n            value: newEmployee.date_of_birth || '',\n            onChange: e => {\n              handleChange(e);\n            },\n            autoComplete: \"age\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          check: true,\n          inline: true,\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            for: \"isActive\",\n            children: \"Active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"checkbox\",\n            name: \"is_active\",\n            id: \"isActive\",\n            value: true || '',\n            onChange: () => setChecked(!checked),\n            autoComplete: \"isActive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            outline: true,\n            color: \"primary\",\n            type: \"submit\",\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            outline: true,\n            color: \"secondary\",\n            tag: Link,\n            to: \"/home\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EmployeeAddition, \"ro3jZahMgnSPWyaj8JT+sMTRwlw=\");\n\n_c = EmployeeAddition;\nexport default EmployeeAddition;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmployeeAddition\");","map":{"version":3,"sources":["C:/Users/pavlo/React-Node/reactproject/my-app/src/EmployeeAddition.js"],"names":["React","useEffect","useState","Button","Container","Form","FormGroup","Input","Label","Link","EmployeeAddition","emptyEmployee","id","last_name","first_name","date_of_birth","is_active","newEmployee","setEmployee","checked","setChecked","handleChange","event","console","log","target","name","value","handleSubmit","e","alert","fetch","mode","method","headers","localStorage","getItem","body","JSON","stringify","textAlign","font"],"mappings":"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","sourcesContent":["import React,{useEffect, useState} from 'react';\r\nimport { Button, Container, Form, FormGroup, Input, Label} from 'reactstrap';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction EmployeeAddition() {\r\n    \r\n\r\n    var emptyEmployee = {\r\n        id:0,\r\n        last_name:'',\r\n        first_name:'',\r\n        date_of_birth:'',\r\n        is_active:''\r\n      };\r\n\r\n    const [newEmployee,setEmployee] = useState(emptyEmployee);\r\n    const [checked, setChecked] = useState(false);\r\n    // useEffect(() => {\r\n    //     console.log (`You clicked ${count} times`);\r\n    // });\r\n\r\n\r\n    function handleChange(event)  {\r\n        console.log(event.target.name)\r\n        console.log(event.target.value)\r\n        setEmployee({...newEmployee, [event.target.name]:event.target.value})\r\n      }\r\n\r\n    async function handleSubmit(e){\r\n\r\n        //e.preventDefault();\r\n        console.log(newEmployee.is_active);\r\n        if (newEmployee.first_name == \"\" || newEmployee.last_name == \"\" || newEmployee.date_of_birth == \"\"){\r\n            alert('Please complete the fields first')\r\n            return;\r\n        }\r\n        else {\r\n        setEmployee(newEmployee.is_active=checked);\r\n        await fetch(`/employee`,\r\n        {\r\n          mode:'cors',\r\n          method: 'POST',\r\n          headers: { \r\n            \"x-access-token\": localStorage.getItem(\"token\"),\r\n            'accept': 'application/json',\r\n            'content-type': 'application/json'\r\n          },\r\n          body:JSON.stringify(newEmployee)\r\n        })\r\n        console.log('ADD is in progress...')\r\n        // .then(response => {\r\n        //   console.log(response);\r\n        //   return response.json()\r\n        // })\r\n        console.log('ADD IS DONE')\r\n        }\r\n      }\r\n\r\n\r\n    return (\r\n        <div>\r\n        <header className=\"App-header\">\r\n          My first React-Node CRUD App\r\n        </header>\r\n        <h1 style={{ textAlign: \"center\" , font:14}}>Add new Employee</h1>\r\n        <Container> \r\n          <Form onSubmit={(e)=> handleSubmit(e)}>\r\n            <FormGroup>\r\n              <Label for=\"firstname\">Firstname</Label>\r\n              <Input type=\"text\" name=\"first_name\" id=\"firstname\" value={newEmployee.first_name || ''}\r\n                onChange={(e) => {handleChange(e)}} autoComplete=\"firstname\"/>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <Label for=\"lastname\">Lastname</Label>\r\n              <Input type=\"text\" name=\"last_name\" id=\"lastname\" value={newEmployee.last_name || ''}\r\n                onChange={(e) => {handleChange(e)}} autoComplete=\"lastname\"/>\r\n              </FormGroup>          \r\n              <FormGroup>\r\n                <Label for=\"age\">Date of Birth</Label>\r\n                <Input type=\"date\" name=\"date_of_birth\" id=\"age\" value={newEmployee.date_of_birth || ''}\r\n                  onChange={(e) => {handleChange(e)}} autoComplete=\"age\"/>\r\n              </FormGroup>\r\n              <FormGroup check inline>\r\n                <Label for=\"isActive\">Active</Label>\r\n                <Input type=\"checkbox\" name=\"is_active\" id=\"isActive\" value={true || ''}\r\n                  onChange={() => setChecked(!checked)} autoComplete=\"isActive\"/>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Button outline color=\"primary\" type=\"submit\">Add</Button>\r\n                <Button outline color=\"secondary\" tag={Link} to=\"/home\">Cancel</Button>\r\n              </FormGroup>\r\n            </Form>\r\n          </Container>\r\n         \r\n        </div>\r\n    )        \r\n}    \r\n\r\nexport default EmployeeAddition; "]},"metadata":{},"sourceType":"module"}